@model Thinktecture.IdentityServer.Web.ViewModels.Administration.RelyingPartyModel

@{
    ViewBag.Title = "Edit " + Model.Name;
}

<h2>
    Edit @Model.Name
    <a href="@Url.Content("~/docs/relyingParties.html")" target="_blank">(help)</a>
</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm("Edit", "RelyingPartiesAdmin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Id)
    
    <fieldset>
        <legend>Relying Party</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Realm)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Realm)
            @Html.ValidationMessageFor(model => model.Realm)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ReplyTo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ReplyTo)
            @Html.ValidationMessageFor(model => model.ReplyTo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ExtraData1)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ExtraData1)
            @Html.ValidationMessageFor(model => model.ExtraData1)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ExtraData2)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ExtraData2)
            @Html.ValidationMessageFor(model => model.ExtraData2)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ExtraData3)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ExtraData3)
            @Html.ValidationMessageFor(model => model.ExtraData3)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EncryptingCertificate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EncryptingCertificate)
            @Html.ValidationMessageFor(model => model.EncryptingCertificate)
            <br />
            (@Model.EncryptingCertificateName)

            <br />
            <br />
            <label>Upload new Certificate</label>
            <br />
            <input type="file" name="certificateUpload" id="certificateUpload" />

        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SymmetricSigningKey)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SymmetricSigningKey)
            @Html.ValidationMessageFor(model => model.SymmetricSigningKey)
            <br />
            <input type="button" id="generateKeyButton" name="generateKeyButton" value="Generate" />
        </div>

        <p>
            <input type="submit" value="Update" />
        </p>
    </fieldset>    
}

<div>
    @Html.ActionLink("Back", "Index")
</div>

@if (false)
{
    <script src="../../Scripts/jquery-1.4.4.js" type="text/javascript" />
} 
<script type="text/javascript">
    $(function () {
        $("#generateKeyButton").click(function () {
            var url = '@Url.Action("GenerateSymmetricSigningKey")';
 
            $.post(url, function (result) {
                $("#SymmetricSigningKey").val(result);    
            }, "json");
        });
    });
</script>